{"version":3,"sources":["components/Slideshow.js","data/data.js","components/header.js","components/MasonryGrid.js","hooks/useMedia.js","hooks/useMeasure.js","App.js","index.js"],"names":["Slideshow","css","height","Container","styled","header","Title","h1","Button","button","Header","remix","onClick","MasonryGrid","columns","queries","values","defaultValue","match","findIndex","q","matchMedia","matches","useState","value","set","useEffect","handler","window","addEventListener","removeEventListener","useMedia","ref","useRef","left","top","width","bounds","ResizeObserver","entry","contentRect","ro","observe","current","disconnect","useMeasure","bind","data","items","reorder","setReorder","shuffle","heights","Array","fill","gridItems","map","child","i","column","indexOf","Math","min","xy","transitions","useTransition","item","from","opacity","enter","update","leave","config","mass","tension","friction","trail","Fragment","class","style","max","props","rest","key","div","transform","interpolate","x","y","backgroundImage","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76dbec90.chunk.js","sourcesContent":["import React, { useRef } from 'react'\nimport clamp from 'lodash-es/clamp'\nimport { useSprings, animated } from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport '../styles.css'\n\nconst pages = [\n    'https://images.pexels.com/photos/62689/pexels-photo-62689.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    'https://images.pexels.com/photos/296878/pexels-photo-296878.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    'https://images.pexels.com/photos/1509428/pexels-photo-1509428.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    'https://images.pexels.com/photos/351265/pexels-photo-351265.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    'https://images.pexels.com/photos/924675/pexels-photo-924675.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\n]\n\nfunction Slideshow() {\n        const index = useRef(0)\n        const [props, set] = useSprings(pages.length, i => ({\n            x: i * window.innerWidth,\n            scale: 1,\n            display: 'block'\n        }))\n        const bind = useDrag(({down, movement: [mx], direction: [xDir], distance, cancel}) => {\n            if (down && distance > window.innerWidth / 2)\n                cancel((index.current = clamp(index.current + (xDir > 0 ? -1 : 1), 0, pages.length - 1)))\n            set(i => {\n                if (i < index.current - 1 || i > index.current + 1) return {display: 'none'}\n                const x = (i - index.current) * window.innerWidth + (down ? mx : 0)\n                const scale = down ? 1 - distance / window.innerWidth / 2 : 1\n                return {x, scale, display: 'block'}\n            })\n        })\n        return props.map(({x, display, scale}, i) => (\n            <animated.div {...bind()} key={i} style={{display, x}}>\n                <animated.div style={{scale, backgroundImage: `url(${pages[i]})`}}/>\n            </animated.div>\n        ))\n}\nexport default Slideshow;","export default [\n    {\n        css:\n            'url(https://images.pexels.com/photos/416430/pexels-photo-416430.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 150,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/1103970/pexels-photo-1103970.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/358574/pexels-photo-358574.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/1738986/pexels-photo-1738986.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/96381/pexels-photo-96381.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/1005644/pexels-photo-1005644.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 200,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/227675/pexels-photo-227675.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/325185/pexels-photo-325185.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 200,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/327482/pexels-photo-327482.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 400,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/988872/pexels-photo-988872.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 200,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/249074/pexels-photo-249074.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 150,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/310452/pexels-photo-310452.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 400,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/380337/pexels-photo-380337.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 200,\n    },\n]\n","import React from 'react'\nimport styled from 'styled-components'\n\n/**\n * Pallete\n * gunmetal: #272838\n * platinum: #E5ECE9\n * red-violet: #C60F7B\n * black-coral: #545E75\n * slate-grey: #76818E\n * white: #FFFFFF\n */\nconst Container = styled.header`\n  background-color: #272838;\n  position: fixed;\n  display: flex;\n  flex-direction: row;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 5;\n  padding: 1rem 2rem 1rem 2rem;\n  justify-content: space-between;\n`\n\nconst Title = styled.h1`\n  font-size: 1.2rem;\n  color: #e5ece9;\n`\n\nconst Button = styled.button`\n  border: none;\n  border-radius: 0.5rem;\n  padding: .2rem 2rem .2rem 2rem \n  font-size: 1rem;\n  cursor: pointer;\n`\n\nconst Header = ({ remix }) => {\n    return (\n        <Container>\n            <Title>Gallery</Title>\n            <Button onClick={remix}>Remix</Button>\n        </Container>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport { useTransition, animated as a, config } from 'react-spring'\nimport shuffle from 'lodash/shuffle'\nimport useMeasure from '../hooks/useMeasure'\nimport useMedia from '../hooks/useMedia'\nimport data from '../data/data'\nimport '../styles.css'\nimport Header from '../components/header'\n\nfunction MasonryGrid() {\n    const columns = useMedia(\n        ['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'],\n        [5, 4, 3],\n        2\n    )\n    const [bind, { width }] = useMeasure()\n    const [items, set] = useState(data)\n    const [reorder, setReorder] = useState(false)\n\n    useEffect(() => set(shuffle), [reorder])\n\n    let heights = new Array(columns).fill(0) // Each column gets a height starting with zero\n    let gridItems = items.map((child, i) => {\n        const column = heights.indexOf(Math.min(...heights)) // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n        const xy = [\n            (width / columns) * column,\n            (heights[column] += child.height / 2) - child.height / 2,\n        ] // X = container width / number of columns * column index, Y = it's just the height of the current column\n        return { ...child, xy, width: width / columns, height: child.height / 2 }\n    })\n\n    // This turns gridItems into transitions, any addition, removal or change will be animated\n    const transitions = useTransition(gridItems, item => item.css, {\n        from: ({ xy, width, height }) => ({ xy, width, height, opacity: 0 }),\n        enter: ({ xy, width, height }) => ({ xy, width, height, opacity: 1 }),\n        update: ({ xy, width, height }) => ({ xy, width, height }),\n        leave: { height: 0, opacity: 0 },\n        config: { mass: 5, tension: 500, friction: 100 },\n        trail: 25,\n    })\n\n    return (\n        <React.Fragment>\n            <Header remix={() => setReorder(!reorder)} />\n            <div {...bind} class=\"list\" style={{ height: Math.max(...heights) }}>\n                {transitions.map(({ item, props: { xy, ...rest }, key }) => (\n                    <a.div\n                        key={key}\n                        style={{\n                            transform: xy.interpolate(\n                                (x, y) => `translate3d(${x}px,${y}px,0)`\n                            ),\n                            ...rest,\n                        }}\n                    >\n                        <div style={{ backgroundImage: item.css }} />\n                    </a.div>\n                ))}\n            </div>\n        </React.Fragment>\n    )\n}\nexport default MasonryGrid;\n","import { useEffect, useState } from 'react'\n\nexport default function useMedia(queries, values, defaultValue) {\n    const match = () =>\n        values[queries.findIndex(q => matchMedia(q).matches)] || defaultValue\n    const [value, set] = useState(match)\n    useEffect(() => {\n        const handler = () => set(match)\n        window.addEventListener('resize', handler)\n        return () => window.removeEventListener(handler)\n    }, [])\n    return value\n}","import { useRef, useState, useEffect } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport default function useMeasure() {\n    const ref = useRef()\n    const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 })\n    const [ro] = useState(\n        () => new ResizeObserver(([entry]) => set(entry.contentRect))\n    )\n    useEffect(() => (ro.observe(ref.current), ro.disconnect), [])\n    return [{ ref }, bounds]\n}","import React, {Component} from 'react';\nimport Slideshow from \"./components/Slideshow\";\nimport MasonryGrid from \"./components/MasonryGrid\";\n\nclass App extends Component {\n    render() {\n        return (\n\n                <MasonryGrid/>\n\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}