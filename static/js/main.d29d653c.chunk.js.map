{"version":3,"sources":["components/Slideshow.js","data/data.js","components/header.js","components/MasonryGrid.js","App.js","index.js"],"names":["pages","Slideshow","index","useRef","useSprings","length","i","x","window","innerWidth","scale","display","props","set","bind","useDrag","down","mx","movement","xDir","direction","distance","cancel","current","clamp","map","div","key","style","backgroundImage","styled","header","button","MasonryGrid","App","Fragment","Component","ReactDOM","render","document","getElementById"],"mappings":"0WAOMA,G,MAAQ,CACV,8GACA,gHACA,kHACA,gHACA,kHAuCWC,MApCf,WACI,IAAMC,EAAQC,iBAAO,GADJ,EAIIC,YAAWJ,EAAMK,QAAQ,SAAAC,GAAC,MAAK,CAChDC,EAAGD,EAAIE,OAAOC,WACdC,MAAO,EACPC,QAAS,YAPI,mBAIVC,EAJU,KAIHC,EAJG,KAUXC,EAAOC,aAAQ,YAAkE,IAAhEC,EAA+D,EAA/DA,KAAiBC,EAA8C,cAAzDC,SAAyD,MAA7BC,EAA6B,cAAzCC,UAAyC,MAAtBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,OAElEN,GAAQK,EAAWb,OAAOC,WAAa,GACvCa,EAAQpB,EAAMqB,QAAUC,YAAMtB,EAAMqB,SAAWJ,EAAO,GAAK,EAAI,GAAI,EAAGnB,EAAMK,OAAS,IAEzFQ,GAAI,SAAAP,GAEA,OAAIA,EAAIJ,EAAMqB,QAAU,GAAKjB,EAAIJ,EAAMqB,QAAU,EAAU,CAACZ,QAAS,QAQ9D,CAACJ,GALGD,EAAIJ,EAAMqB,SAAWf,OAAOC,YAAcO,EAAOC,EAAK,GAKtDP,MAFGM,EAAO,EAAIK,EAAWb,OAAOC,WAAa,EAAI,EAE1CE,QAAS,eAInC,OAAOC,EAAMa,KAAI,WAAsBnB,GAAtB,IAAEC,EAAF,EAAEA,EAAGI,EAAL,EAAKA,QAASD,EAAd,EAAcA,MAAd,OACb,kBAAC,IAASgB,IAAV,iBAAkBZ,IAAlB,CAA0Ba,IAAKrB,EAAGsB,MAAO,CAACjB,UAASJ,OAC/C,kBAAC,IAASmB,IAAV,CAAcE,MAAO,CAAClB,QAAOmB,gBAAgB,OAAD,OAAS7B,EAAMM,GAAf,a,mCC9CzC,I,ihBCYGwB,IAAOC,OAAV,KAeAD,IAAOE,OAAV,KC8CGC,IC1DAC,E,iLATP,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,EAAD,W,GAJEC,aCAlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d29d653c.chunk.js","sourcesContent":["import React, {useRef} from 'react'\nimport clamp from 'lodash-es/clamp'\nimport {useSprings, animated} from 'react-spring'\nimport {useDrag} from 'react-use-gesture'\nimport '../slideshowstyles.css'\n\n// Image array\nconst pages = [\n    'https://images.pexels.com/photos/62689/pexels-photo-62689.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    'https://images.pexels.com/photos/296878/pexels-photo-296878.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    'https://images.pexels.com/photos/1509428/pexels-photo-1509428.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    'https://images.pexels.com/photos/351265/pexels-photo-351265.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    'https://images.pexels.com/photos/924675/pexels-photo-924675.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\n];\n\nfunction Slideshow() {\n    const index = useRef(0);\n\n    // useSprings hook that sets (x, display, scale)\n    const [props, set] = useSprings(pages.length, i => ({\n        x: i * window.innerWidth,\n        scale: 1,\n        display: 'block'\n    }));\n\n    const bind = useDrag(({down, movement: [mx], direction: [xDir], distance, cancel}) => {\n        // Set limit on drag distance\n        if (down && distance > window.innerWidth / 2)\n            cancel((index.current = clamp(index.current + (xDir > 0 ? -1 : 1), 0, pages.length - 1)));\n\n        set(i => {\n            // If out of bounds\n            if (i < index.current - 1 || i > index.current + 1) return {display: 'none'};\n\n            // Set x to pages length\n            const x = (i - index.current) * window.innerWidth + (down ? mx : 0);\n\n            // Set scale based on down distance\n            const scale = down ? 1 - distance / window.innerWidth / 2 : 1;\n\n            return {x, scale, display: 'block'}\n        })\n    });\n\n    return props.map(({x, display, scale}, i) => (\n        <animated.div {...bind()} key={i} style={{display, x}}>\n            <animated.div style={{scale, backgroundImage: `url(${pages[i]})`}}/>\n        </animated.div>\n    ))\n}\n\nexport default Slideshow;","export default [\n    {\n        css:\n            'url(https://images.pexels.com/photos/416430/pexels-photo-416430.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 150,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/1103970/pexels-photo-1103970.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/358574/pexels-photo-358574.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/1738986/pexels-photo-1738986.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/96381/pexels-photo-96381.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/1005644/pexels-photo-1005644.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 200,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/227675/pexels-photo-227675.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 300,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/325185/pexels-photo-325185.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 200,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/327482/pexels-photo-327482.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 400,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/988872/pexels-photo-988872.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 200,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/249074/pexels-photo-249074.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 150,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/310452/pexels-photo-310452.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 400,\n    },\n    {\n        css:\n            'url(https://images.pexels.com/photos/380337/pexels-photo-380337.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n        height: 200,\n    },\n]\n","import React from 'react'\nimport styled from 'styled-components'\n\n/**\n * Pallete\n * gunmetal: #272838\n * platinum: #E5ECE9\n * red-violet: #C60F7B\n * black-coral: #545E75\n * slate-grey: #76818E\n * white: #FFFFFF\n */\nconst Container = styled.header`\n  background-color: #272838;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 5;\n  padding: 1rem 2rem 1rem 2rem;\n  justify-content: space-between;\n`\n\n\n\nconst Button = styled.button`\n  position: absolute;\n  z-index: 10;\n  border: none;\n  border-radius: 0.5rem;\n  padding: .2rem 2rem .2rem 2rem \n  font-size: 1rem;\n  cursor: pointer;\n`\n\nconst Header = ({ remix }) => {\n    return (\n\n\n            <Button onClick={remix}>Remix</Button>\n\n    )\n}\n\nexport default Header\n","import React, {useState, useEffect} from 'react'\nimport {useTransition, animated as a, config} from 'react-spring'\nimport shuffle from 'lodash/shuffle'\nimport useMeasure from '../hooks/useMeasure'\nimport useMedia from '../hooks/useMedia'\nimport data from '../data/data'\nimport '../masonrygridstyles.css'\nimport Header from '../components/header'\n\nfunction MasonryGrid() {\n    // Current column using utility function\n    const columns = useMedia(\n        ['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'],\n        [5, 4, 3],\n        2\n    );\n\n    // bind, items and reorder hooks\n    const [bind, {width}] = useMeasure();\n    const [items, set] = useState(data);\n    const [reorder, setReorder] = useState(false);\n\n    // Reorder items\n    useEffect(() => set(shuffle), [reorder]);\n\n    // Each column gets a height starting with zero\n    let heights = new Array(columns).fill(0);\n\n    let gridItems = items.map((child, i) => {\n        // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n        const column = heights.indexOf(Math.min(...heights));\n\n        // X = container width / number of columns * column index, Y = it's just the height of the current column\n        const xy = [\n            (width / columns) * column,\n            (heights[column] += child.height / 2) - child.height / 2,\n        ];\n\n        return {...child, xy, width: width / columns, height: child.height / 2}\n    });\n\n    // This turns gridItems into transitions, any addition, removal or change will be animated\n    const transitions = useTransition(gridItems, item => item.css, {\n        from: ({xy, width, height}) => ({xy, width, height, opacity: 0}),\n        enter: ({xy, width, height}) => ({xy, width, height, opacity: 1}),\n        update: ({xy, width, height}) => ({xy, width, height}),\n        leave: {height: 0, opacity: 0},\n        config: {mass: 25, tension: 300, friction: 100},\n        trail: 25,\n    });\n\n    return (\n        <React.Fragment>\n            <Header remix={() => setReorder(!reorder)}/>\n            <div {...bind} class=\"list\" style={{height: Math.max(...heights)}}>\n                {transitions.map(({item, props: {xy, ...rest}, key}) => (\n                    <a.div\n                        key={key}\n                        style={{\n                            transform: xy.interpolate(\n                                (x, y) => `translate3d(${x}px,${y}px,0)`\n                            ),\n                            ...rest,\n                        }}\n                    >\n                        <div style={{backgroundImage: item.css}}/>\n                    </a.div>\n                ))}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default MasonryGrid;\n","import React, {Component} from 'react';\nimport Slideshow from \"./components/Slideshow\";\nimport MasonryGrid from \"./components/MasonryGrid\";\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Slideshow/>\n                {/*<MasonryGrid/>*/}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}